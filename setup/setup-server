!/bin/bash
################################################################################
###
### SERVER SETUP SCRIPT
###
### This setup script will be copied to - and executed on the target servers. 
###
###                  Do not execute this script directly
###
### Author: Sven Olaf Oostenbrink <sven.oostenbrink@catenamedia.com> <so.oostenbrink@gmail.com>
###
################################################################################



### Parse and validate variables
HOSTNAME=$1
WORDPRESS_DOMAIN=$3
SERVER_PASSWORD=$2
DEFAULT_PASSWORD="#45yu$jHWEQrfgr67IereTGqweRTjrYT&uyw34qf4%^8456y2%$^uijK$tyg68&(PtYRT^ywRTYo6*(i43%RTy5&^31TY36&Jh2134@5367ik4E#TRg2$65I$5646$u#%^$"

if [ -z $HOSTNAME ]; then
        echo Please specify a hostname
        echo Usage: ubuntu-setup-script HOSTNAME DEFAULT_PASSWORD WORDPRESS_DOMAIN
        exit 1;
fi

if [ -z $DEFAULT_PASSWORD ]; then
        echo Please specify a default password
        echo Usage: ubuntu-setup-script HOSTNAME DEFAULT_PASSWORD WORDPRESS_DOMAIN
        exit 1;
fi

### Set the detault user 
USERS="sven tums ivan catena"
MYSQLPASSWORD=$DEFAULT_PASSWORD;

## Strip http:// trailing / etc from the hostname if accidentally added.
HOSTNAME=$(echo $HOSTNAME | sed 's/\..*//')

# Set the root password
echo Set the new password for user root
echo root:$DEFAULT_PASSWORD | chpasswd



### Add the missing groups
groupadd admin
groupadd data
groupadd backup
groupadd development



### Fix sudoers
sed -i "s/%admin \+ALL=(ALL) \+ALL/%admin ALL=(ALL) NOPASSWD:ALL/" /etc/sudoers
sed -i "s/%sudo/#%sudo/" /etc/sudoers



### Set hostname
### Fix /etc/hosts if needed 
if [ -z "$(grep $HOSTNAME /etc/hosts)" ]; then
        echo Fixing /etc/hosts file
        sed -i "s/127.0.0.1 /127.0.0.1 $HOSTNAME /" /etc/hosts
fi

hostname $HOSTNAME
echo $HOSTNAME > /etc/hostname
echo "127.0.0.1 $HOSTNAME" >> /etc/hosts



### Add users with default password and install their SSH keys
for USER in $USERS; do
        echo Set the new password for user $USER
        useradd -s /bin/bash -m $USER
        usermod -a -G admin $USER
        usermod -a -G www-data $USER
        usermod -a -G backup $USER
        usermod -a -G data $USER
        usermod -a -G systemd-journal $USER
        echo "$USER:$DEFAULT_PASSWORD" | chpasswd
# TODO INSTALL SSH KEY
done



### Setup the data directory
mkdir -p /data/backups
mkdir -p /data/recovery
find /data -type d -exec chmod 750 {} \;
find /data -type d -exec chmod g+s {} \;
find /data -type f -exec chmod 640 {} \;
chown catena:data /data -R
chown catena:backup /data/backups /data/recovery -R



### Apply correct and secure SSH configuration
### Set SSH to port 17359 
sed -i "s/Port 22/Port 40220/" /etc/ssh/sshd_config
sed -i "s/#Port/Port/" /etc/ssh/sshd_config
sed -i "s/#PasswordAuthentication/PasswordAuthentication/" /etc/ssh/sshd_config
sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/" /etc/ssh/sshd_config

echo ""                                                                      >> /etc/ssh/sshd_config
echo "#########  CATENA MEDIA CONFIGURATION #############"                   >> /etc/ssh/sshd_config
echo ""                                                                      >> /etc/ssh/sshd_config
echo "AllowUsers" $USERS                                                     >> /etc/ssh/sshd_config
echo "IgnoreRhosts yes"                                                      >> /etc/ssh/sshd_config
echo "HostbasedAuthentication no"                                            >> /etc/ssh/sshd_config
echo "PermitEmptyPasswords no         # Disallow empty passwords"            >> /etc/ssh/sshd_config
echo "UseDNS no                       # Do not do DNS lookups for hostnames" >> /etc/ssh/sshd_config
echo "PermitRootLogin no              # Disable direct login from root"      >> /etc/ssh/sshd_config
echo "AllowTcpForwarding yes          # Required to setup the tunnel"        >> /etc/ssh/sshd_config
echo "PasswordAuthentication no       # Disabled for better security"        >> /etc/ssh/sshd_config
echo "RSAAuthentication no            # Disabled to force DSA keys"          >> /etc/ssh/sshd_config
echo "PubkeyAuthentication yes        # Enables public key authentication"   >> /etc/ssh/sshd_config

sudo service ssh restart



### Ensure package managers are dead and gone
echo Waiting for package managers

while [ "$(pgrep apt)" ]
do
        echo -n .
        sleep 1;
# TODO Don't wait forever! Crash after, say, 60 seconds?
done



### Install and configure CSF firewall
### Prepare perl packages
sudo apt-get -y install libfile-find*
sudo apt-get -y install libnet-smtp*
sudo apt-get -y install libmath-bigint-perl
sudo apt-get -y install libwww-perl

#(echo y;echo o conf prerequisites_policy follow;echo o conf commit)|cpan File::Find
#(echo y;echo o conf prerequisites_policy follow;echo o conf commit)|cpan Net::SMTP
#(echo y;echo o conf prerequisites_policy follow;echo o conf commit)|cpan Math::BigInt

### Install and configure firewall
wget http://download.configserver.com/csf.tgz
tar -xf csf.tgz
cd csf
./install.sh

cp /etc/csf/csf.conf /etc/csf/csf.conf~

sed -i "s/TESTING = \"1\"/TESTING = \"0\"/" /etc/csf/csf.conf
sed -i "s/RESTRICT_SYSLOG = \"0\"/RESTRICT_SYSLOG = \"3\"/" /etc/csf/csf.conf
sed -i "s/TCP_IN = \"20,21,22,25,53,80,110,143,443,465,587,993,995,40220\"/TCP_IN = \"80,443,40220\"/" /etc/csf/csf.conf
sed -i "s/TCP_OUT = \"20,21,22,25,53,80,110,113,443,587,993,995\"/TCP_OUT = \"20,21,22,25,53,80,443,40220\"/" /etc/csf/csf.conf
sed -i "s/UDP_IN = \"20,21,53\"/UDP_IN = \"\"/" /etc/csf/csf.conf
sed -i "s/UDP_OUT = \"20,21,53,113,123\"/UDP_OUT = \"20,21,53,123\"/" /etc/csf/csf.conf



### Ensure no apt or dpkg process is around
sudo pkill -9 apt
sudo pkill -9 dpkg
# TODO Ugly, test if they are around and fail if they are!



### Update and install required packages
export DEBIAN_FRONTEND="noninteractive"

sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password $MYSQLPASSWORD"
sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $MYSQLPASSWORD"
sudo debconf-set-selections <<< "postfix postfix/mailname string $HOSTNAME"
sudo debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"

sudo apt-get -y install vim
sudo apt-get update
sudo apt-get -y dist-upgrade



### INSTALL REQUIRED SOFTWARE PACKAGES, PHP PACKAGES
sudo apt-get -y install vim mysql-server mysql-client axel mysql-server mysql-client apache2 apachetop mytop htop iotop dstat nmap php php-cli php-mysql php-curl php-common php-imagick php-gd php-memcached php-fpm unzip libwww-perl libdbi-perl libdbd-mysql-perl postfix git mysqltuner whois php-mbstring php-imap php-xml bash-completion bind9-host iptables traceroute certbot python3-certbot-apache php-intl imagemagick

sudo phpenmod curl
sudo phpenmod sodium
sudo phpenmod imagick
sudo phpenmod gd
sudo phpenmod memcached
sudo phpenmod xml
sudo phpenmod mbstring



### Configure PHP-FPM for lightspeed
# TODO Update this for lightspeed web browser
#echo "<IfModule mod_fastcgi.c>"                                                                                       >> /etc/apache2/conf-available/php5-fpm.conf
#echo "    AddHandler php5-fcgi .php"                                                                                  >> /etc/apache2/conf-available/php5-fpm.conf
#echo "    Action php5-fcgi /php5-fcgi"                                                                                >> /etc/apache2/conf-available/php5-fpm.conf
#echo "    Alias /php5-fcgi /usr/lib/cgi-bin/php5-fcgi"                                                                >> /etc/apache2/conf-available/php5-fpm.conf
#echo "    FastCgiExternalServer /usr/lib/cgi-bin/php5-fcgi -socket /var/run/php5-fpm.sock -pass-header Authorization" >> /etc/apache2/conf-available/php5-fpm.conf
#echo "</IfModule>"                                                                                                    >> /etc/apache2/conf-available/php5-fpm.conf
#a2enmod actions fastcgi alias
#a2enconf php5-fpm
sudo a2enmod xml2enc
sudo a2enmod proxy_fcgi
sudo a2enmod rewrite
sudo a2enmod headers
sudo a2enmod expires
sudo a2enmod ssl
service apache2 restart



### Fix sudoers, allow all admin users NOPASSWD sudo
# TODO Debate if this should be required or not
sed -i "s/%admin ALL=(ALL) ALL/%admin ALL=(ALL) NOPASSWD:ALL/" /etc/sudoers



### Improve lightspeed configuration
# TODO Check for optimum lightspeed configuration
sed -i -e "s/ServerTokens Full/ServerTokens Prod/" /etc/apache2/apache2.conf
sed -i -e "s/ServerTokens OS/ServerTokens Prod/" /etc/apache2/apache2.conf
sed -i -e "s/ServerSignature On/ServerSignature Off/" /etc/apache2/apache2.conf



### Improve PHP configuration
sed -i -e "s/disable_functions =/disable_functions = assert,eval,/" /etc/php/7.4/fpm/php.ini
sed -i -e "s/disable_functions = /disable_functions = assert,eval,/" /etc/php/7.4/fpm/php.ini



### Improve aliases for all users
sed -i -e "s/alias ll='ls -alF'/alias ll='ls -hlF'/" /root/.bashrc 

for USER in $USERS; do
	sed -i -e "s/alias ll='ls -alF'/alias ll='ls -hlF'/" /home/"$USER"/.bashrc
done



### Configure MySQL
# NOWDAYS WE NEED TO RUN THIS COMMAND
echo Setting mysql secure instalation
mysql_secure_installation

# Create MySQL default accounts
# NEW MYSQL CANNOT INSERT ROOT PASSWORD SO THIS IS NOT WORKING ANYMORE
mysql -e "CREATE USER sven@localhost IDENTIFIED BY 'sven'"             -u root -p"nX15/Qc410"



### Setup web directory
echo Setting up web directory
mkdir /var/www/html -p
rm /var/www/index.html -f
rm /var/www/html/index.html -f

touch /var/www/index.html 
touch /var/www/html/index.html

sudo chown www-data:www-data /var/www -R
sudo chmod ug+rw,o-rwx /var/www -R
sudo find /var/www/html -type d -exec chmod g+xs,u+x {} \;



### Setup letsencrypt
echo Setting up letsencrypt
sudo git clone https://github.com/certbot/certbot /root/certbot
setsid sh -c '/root/certbot/certbot-auto --os-packages-only' < /dev/null



### SETUP WORDPRESS
WORDPRESS_DOMAIN=$1
DOMAIN=$2
DEFAULT_PASSWORD=$3

H=$(echo $WORDPRESS_DOMAIN | sed 's/\..*//')

if [ -z $WORDPRESS_DOMAIN ]; then
        echo Please specify WORDPRESS_DOMAIN
        echo Usage: ubuntu-setup-wordpress WORDPRESS_DOMAIN DOMAIN DEFAULT_PASSWORD
        exit 1;
fi

if [ -z $DOMAIN ]; then
        echo Please specify DOMAIN
        echo Usage: ubuntu-setup-wordpress WORDPRESS_DOMAIN DOMAIN DEFAULT_PASSWORD
        exit 1;
fi

if [ -z $DEFAULT_PASSWORD ]; then
        echo Please specify DEFAULT_PASSWORD
        echo Usage: ubuntu-setup-wordpress WORDPRESS_DOMAIN DOMAIN DEFAULT_PASSWORD
        exit 1;
fi

DOMAIN=$(echo $DOMAIN | sed "s/.s//");



# Download wordpress and place in the correct directory
cd ~
wget https://wordpress.org/latest.tar.gz
tar -xf latest.tar.gz
mv ~/wordpress /var/www/html/$WORDPRESS_DOMAIN



# Fix security
sudo chown www-data:www-data /var/www/ -R
sudo chmod ug+w,o-rwx /var/www/ -R
sudo find /var/www/html -type d -exec chmod g+xs,u+x {} \;



# Setup MySQL
mysql -e "CREATE USER \`$DOMAIN\`@\`localhost\` IDENTIFIED BY \"$DOMAIN\"; GRANT ALL PRIVILEGES ON \`$DOMAIN\`.* TO \`$DOMAIN\`@\`localhost\`; CREATE DATABASE \`$DOMAIN\`" -u root -p"$DEFAULT_PASSWORD"



### Setup lightspeed



### Restart all services
sudo service apache2 restart
sudo service mysql restart
sudo service php-fpm restart



### Implement new firewall configuration
echo Restarting firewall to implement new firewall rules
csf -r



### Cleaning non needed packages, and cache
sudo apt -y autoremove
sudo apt clean


### Setup swap

# TODO Check on Digital Ocean droplets how swap is done
#echo Fixing swap issue
#sudo mkswap /dev/vda2
#swapon -a


sudo fallocate -l 1G /swap
sudo chmod 0400 /swap
sudo chown root:root /swap
sudo mkswap /swap
echo "/swap none swap sw 0 0 " >> /etc/fstab
sudo swapon -a

echo Finished server setup script
